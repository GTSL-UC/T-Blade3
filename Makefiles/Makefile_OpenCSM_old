#	Makefile for OpenCSM
#
IDIR  = $(ESP_ROOT)/include
include $(IDIR)/$(ESP_ARCH)
LDIR  = $(ESP_ROOT)/lib
BDIR  = $(ESP_ROOT)/bin
ifdef ESP_BLOC
ODIR  = $(ESP_BLOC)/obj
else
ODIR  = .
endif

BINLIST =	$(BDIR)/serveCSM \
		$(BDIR)/sensCSM
LIBLIST =	$(LDIR)/$(OSHLIB) \
		$(LDIR)/bezier.so \
		$(LDIR)/biconvex.so \
		$(LDIR)/box.so \
		$(LDIR)/createBEM.so \
		$(LDIR)/createPoly.so \
		$(LDIR)/csm.so \
		$(LDIR)/ellipse.so \
		$(LDIR)/fitcurve.so \
		$(LDIR)/freeform.so \
		$(LDIR)/hex.so \
		$(LDIR)/import.so \
		$(LDIR)/kulfan.so \
		$(LDIR)/naca.so \
		$(LDIR)/nurbbody.so \
		$(LDIR)/parsec.so \
		$(LDIR)/pod.so \
		$(LDIR)/editAttr.so \
		$(LDIR)/sample.so \
		$(LDIR)/sew.so \
		$(LDIR)/radwaf.so \
		$(LDIR)/stag.so \
		$(LDIR)/supell.so \
		$(LDIR)/waffle.so \
		$(LDIR)/PDT2.so
LIBFLIST =	$(LDIR)/naca456.so $(LDIR)/tblade.so $(LDIR)/bladevolume.so $(LDIR)/hubwedge.so
INCLIST =	$(IDIR)/OpenCSM.h \
		$(IDIR)/common.h \
		$(IDIR)/udp.h \
		$(IDIR)/egg.h \
		$(IDIR)/udpUtilities.h $(IDIR)/udpUtilities.c

ifdef FCOMP
default:	$(BINLIST) $(LIBLIST) $(LIBFLIST) $(INCLIST)
else
default:	$(BINLIST) $(LIBLIST)             $(INCLIST)
endif

$(BDIR)/serveCSM:	$(ODIR)/serveCSM.o $(LDIR)/$(OSHLIB) 
	$(CC) -o $(BDIR)/serveCSM $(ODIR)/serveCSM.o $(RPATH) \
		-L$(LDIR) -locsm -lwsserver -legads -lpthread -lz -lm

$(ODIR)/serveCSM.o:	serveCSM.c OpenCSM.h common.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. serveCSM.c \
		-o $(ODIR)/serveCSM.o

$(BDIR)/sensCSM:	$(ODIR)/sensCSM.o $(LDIR)/$(OSHLIB)
	$(CC) -o $(BDIR)/sensCSM $(ODIR)/sensCSM.o $(RPATH) \
		-L$(LDIR) -locsm -legads -lm

$(ODIR)/sensCSM.o:	sensCSM.c OpenCSM.h common.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. sensCSM.c -o $(ODIR)/sensCSM.o

$(LDIR)/libocsm.so:	$(ODIR)/OpenCSM.o $(ODIR)/udp.o
	touch $(LDIR)/libocsm.so
	rm $(LDIR)/libocsm.so
	$(CC) -shared -o $(LDIR)/libocsm.so $(ODIR)/OpenCSM.o $(ODIR)/udp.o \
		-L$(LDIR) -legads -ldl

$(LDIR)/libocsm.dylib:	$(ODIR)/OpenCSM.o $(ODIR)/udp.o
	touch $(LDIR)/libocsm.dylib
	rm $(LDIR)/libocsm.dylib
	$(CC) -dynamiclib -o $(LDIR)/libocsm.dylib $(ODIR)/OpenCSM.o \
		$(ODIR)/udp.o $(RPATH) -L$(LDIR) -legads -ldl \
		-undefined dynamic_lookup \
		-install_name '@rpath/libocsm.dylib' \
		-compatibility_version $(EGREV) \
		-current_version $(EGREV)

# CYGWIN
$(LDIR)/libocsm.dll:	$(ODIR)/OpenCSM.o $(ODIR)/udp.o
	touch $(LDIR)/libocsm.dll
	rm $(LDIR)/libocsm.dll
	$(CC) -shared -o $(LDIR)/libocsm.dll $(ODIR)/OpenCSM.o $(ODIR)/udp.o \
		-L$(LDIR) -legads -ldl $(CPPSLB)

$(ODIR)/OpenCSM.o:	OpenCSM.c OpenCSM.h common.h
	$(CC) -c $(OCOPT) $(DEFINE) -I$(IDIR) -I. OpenCSM.c \
		-o $(ODIR)/OpenCSM.o

$(ODIR)/udp.o:		udp.c
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udp.c -o $(ODIR)/udp.o

$(LDIR)/bezier.so:	$(ODIR)/udpBezier.o
	touch $(LDIR)/bezier.so
	rm $(LDIR)/bezier.so
	$(CC) $(SOFLGS) -o $(LDIR)/bezier.so $(ODIR)/udpBezier.o \
		-L$(LDIR) -legads

$(ODIR)/udpBezier.o:	udpBezier.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpBezier.c \
		-o $(ODIR)/udpBezier.o

$(LDIR)/biconvex.so:	$(ODIR)/udpBiconvex.o
	touch $(LDIR)/biconvex.so
	rm $(LDIR)/biconvex.so
	$(CC) $(SOFLGS) -o $(LDIR)/biconvex.so $(ODIR)/udpBiconvex.o \
		-L$(LDIR) -legads

$(ODIR)/udpBiconvex.o:	udpBiconvex.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpBiconvex.c \
		-o $(ODIR)/udpBiconvex.o

$(LDIR)/box.so:	$(ODIR)/udpBox.o
	touch $(LDIR)/box.so
	rm $(LDIR)/box.so
	$(CC) $(SOFLGS) -o $(LDIR)/box.so $(ODIR)/udpBox.o -L$(LDIR) -legads

$(ODIR)/udpBox.o:	udpBox.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpBox.c -o $(ODIR)/udpBox.o

$(LDIR)/createBEM.so:	$(ODIR)/udfCreateBEM.o
	touch $(LDIR)/createBEM.so
	rm $(LDIR)/createBEM.so
	$(CC) $(SOFLGS) -o $(LDIR)/createBEM.so $(ODIR)/udfCreateBEM.o \
		-L$(LDIR) -legads

$(ODIR)/udfCreateBEM.o:	udfCreateBEM.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udfCreateBEM.c \
		-o $(ODIR)/udfCreateBEM.o

$(LDIR)/createPoly.so:	$(ODIR)/udfCreatePoly.o
	touch $(LDIR)/createPoly.so
	rm $(LDIR)/createPoly.so
	$(CC) $(SOFLGS) -o $(LDIR)/createPoly.so $(ODIR)/udfCreatePoly.o \
		-L$(LDIR) -legads

$(ODIR)/udfCreatePoly.o:	udfCreatePoly.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udfCreatePoly.c \
		-o $(ODIR)/udfCreatePoly.o

$(LDIR)/csm.so:	$(ODIR)/udpCsm.o $(LDIR)/$(OSHLIB)
	touch $(LDIR)/csm.so
	rm $(LDIR)/csm.so
	$(CC) $(SOFLGS) -o $(LDIR)/csm.so $(ODIR)/udpCsm.o -L$(LDIR) -locsm -legads

$(ODIR)/udpCsm.o:	udpCsm.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpCsm.c -o $(ODIR)/udpCsm.o

$(LDIR)/ellipse.so:	$(ODIR)/udpEllipse.o
	touch $(LDIR)/ellipse.so
	rm $(LDIR)/ellipse.so
	$(CC) $(SOFLGS) -o $(LDIR)/ellipse.so $(ODIR)/udpEllipse.o \
		-L$(LDIR) -legads

$(ODIR)/udpEllipse.o:	udpEllipse.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpEllipse.c \
		-o $(ODIR)/udpEllipse.o

$(LDIR)/fitcurve.so:	$(ODIR)/udpFitcurve.o
	touch $(LDIR)/fitcurve.so
	rm $(LDIR)/fitcurve.so
	$(CC) $(SOFLGS) -o $(LDIR)/fitcurve.so $(ODIR)/udpFitcurve.o \
		-L$(LDIR) -legads

$(ODIR)/udpFitcurve.o:	udpFitcurve.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpFitcurve.c \
		-o $(ODIR)/udpFitcurve.o

$(LDIR)/freeform.so:	$(ODIR)/udpFreeform.o
	touch $(LDIR)/freeform.so
	rm $(LDIR)/freeform.so
	$(CC) $(SOFLGS) -o $(LDIR)/freeform.so $(ODIR)/udpFreeform.o \
		-L$(LDIR) -legads

$(ODIR)/udpFreeform.o:	udpFreeform.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpFreeform.c \
		-o $(ODIR)/udpFreeform.o

$(LDIR)/hex.so:	$(ODIR)/udpHex.o
	touch $(LDIR)/hex.so
	rm $(LDIR)/hex.so
	$(CC) $(SOFLGS) -o $(LDIR)/hex.so $(ODIR)/udpHex.o \
		-L$(LDIR) -legads

$(ODIR)/udpHex.o:	udpHex.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpHex.c \
		-o $(ODIR)/udpHex.o

$(LDIR)/import.so:	$(ODIR)/udpImport.o
	touch $(LDIR)/import.so
	rm $(LDIR)/import.so
	$(CC) $(SOFLGS) -o $(LDIR)/import.so $(ODIR)/udpImport.o \
		-L$(LDIR) -legads

$(ODIR)/udpImport.o:	udpImport.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpImport.c \
		-o $(ODIR)/udpImport.o

$(LDIR)/kulfan.so:	$(ODIR)/udpKulfan.o
	touch $(LDIR)/kulfan.so
	rm $(LDIR)/kulfan.so
	$(CC) $(SOFLGS) -o $(LDIR)/kulfan.so $(ODIR)/udpKulfan.o \
		-L$(LDIR) -legads

$(ODIR)/udpKulfan.o:	udpKulfan.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpKulfan.c \
		-o $(ODIR)/udpKulfan.o

$(LDIR)/naca.so:	$(ODIR)/udpNaca.o
	touch $(LDIR)/naca.so
	rm $(LDIR)/naca.so
	$(CC) $(SOFLGS) -o $(LDIR)/naca.so $(ODIR)/udpNaca.o -L$(LDIR) -legads

$(ODIR)/udpNaca.o:	udpNaca.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpNaca.c \
		-o $(ODIR)/udpNaca.o

$(LDIR)/naca456.so:	$(ODIR)/udpNaca456.o $(ODIR)/naca456.o
	touch $(LDIR)/naca456.so
	rm $(LDIR)/naca456.so
	$(FCOMP) $(SOFLGS) -o $(LDIR)/naca456.so $(ODIR)/udpNaca456.o \
		$(ODIR)/naca456.o -L$(LDIR) -legads

$(ODIR)/udpNaca456.o:	udpNaca456.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpNaca456.c \
		-o $(ODIR)/udpNaca456.o

$(ODIR)/naca456.o:	naca456.f90
ifeq ($(EFCOMP),ifort)
	$(FCOMP) -c $(FOPTS) naca456.f90 -o $(ODIR)/naca456.o -module $(ODIR)
else
	$(FCOMP) -c $(FOPTS) naca456.f90 -o $(ODIR)/naca456.o -J $(ODIR)
endif

$(LDIR)/nurbbody.so:	$(ODIR)/udpNurbbody.o
	touch $(LDIR)/nurbbody.so
	rm $(LDIR)/nurbbody.so
	$(CC) $(SOFLGS) -o $(LDIR)/nurbbody.so $(ODIR)/udpNurbbody.o -L$(LDIR) -legads

$(ODIR)/udpNurbbody.o:	udpNurbbody.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpNurbbody.c -o $(ODIR)/udpNurbbody.o

$(LDIR)/parsec.so:	$(ODIR)/udpParsec.o
	touch $(LDIR)/parsec.so
	rm $(LDIR)/parsec.so
	$(CXX) $(SOFLGS) -o $(LDIR)/parsec.so $(ODIR)/udpParsec.o \
		-L$(LDIR) -legads

$(ODIR)/udpParsec.o:	udpParsec.cpp udpUtilities.c udpUtilities.h $(IDIR)/Surreal/SurrealS.h
	$(CXX) -c $(CPPOPT) $(DEFINE) -I$(IDIR) -I. udpParsec.cpp \
		-o $(ODIR)/udpParsec.o

$(LDIR)/pod.so:	$(ODIR)/udpPod.o
	touch $(LDIR)/pod.so
	rm $(LDIR)/pod.so
	$(CC) $(SOFLGS) -o $(LDIR)/pod.so $(ODIR)/udpPod.o -L$(LDIR) -legads

$(ODIR)/udpPod.o:	udpPod.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpPod.c -o $(ODIR)/udpPod.o

$(LDIR)/editAttr.so:	$(ODIR)/udfEditAttr.o
	touch $(LDIR)/editAttr.so
	rm $(LDIR)/editAttr.so
	$(CC) $(SOFLGS) -o $(LDIR)/editAttr.so $(ODIR)/udfEditAttr.o -L$(LDIR) -legads

$(ODIR)/udfEditAttr.o:	udfEditAttr.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udfEditAttr.c -o $(ODIR)/udfEditAttr.o

$(LDIR)/sample.so:	$(ODIR)/udpSample.o
	touch $(LDIR)/sample.so
	rm $(LDIR)/sample.so
	$(CC) $(SOFLGS) -o $(LDIR)/sample.so $(ODIR)/udpSample.o -L$(LDIR) -legads

$(ODIR)/udpSample.o:	udpSample.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpSample.c -o $(ODIR)/udpSample.o

$(LDIR)/sew.so:	$(ODIR)/udpSew.o
	touch $(LDIR)/sew.so
	rm $(LDIR)/sew.so
	$(CC) $(SOFLGS) -o $(LDIR)/sew.so $(ODIR)/udpSew.o -L$(LDIR) -legads

$(ODIR)/udpSew.o:	udpSew.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpSew.c -o $(ODIR)/udpSew.o

$(LDIR)/radwaf.so:	$(ODIR)/udpRadwaf.o
	touch $(LDIR)/radwaf.so
	rm $(LDIR)/radwaf.so
	$(CC) $(SOFLGS) -o $(LDIR)/radwaf.so $(ODIR)/udpRadwaf.o -L$(LDIR) -legads

$(ODIR)/udpRadwaf.o:	udpRadwaf.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpRadwaf.c -o $(ODIR)/udpRadwaf.o

$(LDIR)/stag.so:	$(ODIR)/udpStag.o
	touch $(LDIR)/stag.so
	rm $(LDIR)/stag.so
	$(CC) $(SOFLGS) -o $(LDIR)/stag.so $(ODIR)/udpStag.o \
		-L$(LDIR) -legads

$(ODIR)/udpStag.o:	udpStag.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpStag.c \
		-o $(ODIR)/udpStag.o

$(LDIR)/supell.so:	$(ODIR)/udpSupell.o
	touch $(LDIR)/supell.so
	rm $(LDIR)/supell.so
	$(CC) $(SOFLGS) -o $(LDIR)/supell.so $(ODIR)/udpSupell.o \
		-L$(LDIR) -legads

$(ODIR)/udpSupell.o:	udpSupell.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpSupell.c \
		-o $(ODIR)/udpSupell.o

$(LDIR)/tblade.so:	$(ODIR)/udpTblade.o $(LDIR)/libTBlade3.a
	touch $(LDIR)/tblade.so
	rm $(LDIR)/tblade.so
	$(FCOMP) $(SOFLGS) -o $(LDIR)/tblade.so \
		$(ODIR)/udpTblade.o -L$(LDIR) -lTBlade3 -legads

$(ODIR)/udpTblade.o:	udpTblade.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpTblade.c \
		-o $(ODIR)/udpTblade.o

$(LDIR)/libTBlade3.a:
	(cd Tblade3; make)

$(LDIR)/bladevolume.so:	$(ODIR)/udpBladeVolume.o $(LDIR)/libTBlade3.a
	touch $(LDIR)/bladevolume.so
	rm $(LDIR)/bladevolume.so
	$(FCOMP) $(SOFLGS) -o $(LDIR)/bladevolume.so $(ODIR)/udpBladeVolume.o \
		-L$(LDIR) -lTBlade3 -legads

$(ODIR)/udpBladeVolume.o:	udpBladeVolume.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpBladeVolume.c \
		-o $(ODIR)/udpBladeVolume.o

$(LDIR)/hubwedge.so: $(ODIR)/udpHubWedge.o $(LDIR)/libTBlade3.a
	touch $(LDIR)/hubwedge.so
	rm $(LDIR)/hubwedge.so
	$(FCOMP) $(SOFLGS) -o $(LDIR)/hubwedge.so $(ODIR)/udpHubWedge.o \
		-L$(LDIR) -lTBlade3 -legads

$(ODIR)/udpHubWedge.o:	udpHubWedge.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpHubWedge.c \
		-o $(ODIR)/udpHubWedge.o

$(LDIR)/waffle.so:	$(ODIR)/udpWaffle.o $(LDIR)/$(OSHLIB)
	touch $(LDIR)/waffle.so
	rm $(LDIR)/waffle.so
	$(CC) $(SOFLGS) -o $(LDIR)/waffle.so $(ODIR)/udpWaffle.o \
		-L$(LDIR) -locsm -legads

$(ODIR)/udpWaffle.o:	udpWaffle.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. udpWaffle.c \
		-o $(ODIR)/udpWaffle.o

$(LDIR)/PDT2.so:	$(ODIR)/eggPDT2.o
	touch $(LDIR)/PDT2.so
	rm $(LDIR)/PDT2.so
	$(CC) $(SOFLGS) -o $(LDIR)/PDT2.so $(ODIR)/eggPDT2.o \
		-L$(LDIR) -legads

$(ODIR)/eggPDT2.o:	eggPDT2.c udpUtilities.c udpUtilities.h
	$(CC) -c $(COPTS) $(DEFINE) -I$(IDIR) -I. eggPDT2.c \
		-o $(ODIR)/eggPDT2.o

$(IDIR)/OpenCSM.h:	OpenCSM.h
	touch $(IDIR)/OpenCSM.h
	rm $(IDIR)/OpenCSM.h
	cp -p OpenCSM.h $(IDIR)/OpenCSM.h

$(IDIR)/common.h:	common.h
	touch $(IDIR)/common.h
	rm $(IDIR)/common.h
	cp -p common.h $(IDIR)/common.h

$(IDIR)/udp.h:	udp.h
	touch $(IDIR)/udp.h
	rm $(IDIR)/udp.h
	cp -p udp.h $(IDIR)/udp.h

$(IDIR)/egg.h:	egg.h
	touch $(IDIR)/egg.h
	rm $(IDIR)/egg.h
	cp -p egg.h $(IDIR)/egg.h

$(IDIR)/udpUtilities.h:	udpUtilities.h
	touch $(IDIR)/udpUtilities.h
	rm $(IDIR)/udpUtilities.h
	cp -p udpUtilities.h $(IDIR)/udpUtilities.h

$(IDIR)/udpUtilities.c:	udpUtilities.c
	touch $(IDIR)/udpUtilities.c
	rm $(IDIR)/udpUtilities.c
	cp -p udpUtilities.c $(IDIR)/udpUtilities.c

clean:
	(cd $(ODIR); rm -f udpFitcurve.o udpFreeform.o udpWaffle.o udpCsm.o \
		udpEllipse.o udpNaca.o udpHex.o udpImport.o serveCSM.o \
		OpenCSM.o udp.o udpBezier.o udpBox.o udpNurbbody.o udpParsec.o \
		udpSample.o udpSew.o udpRadwaf.o udpNaca456.o naca456.o \
		udpSupell.o udpStag.o udpKulfan.o udpBiconvex.o \
		udfCreateBEM.o udfCreatePoly.o udpPod.o udfEditAttr.o \
		eggPDT2.o sensCSM.o udpTblade.o udpBladeVolume.o udpHubWedge.o )
ifdef FCOMP
	(cd Tblade3; make clean)
endif

cleanall:	clean
	rm -f  $(BINLIST) $(LIBLIST) $(LIBFLIST) $(INCLIST)
ifdef FCOMP
	(cd Tblade3; make cleanall)
endif
